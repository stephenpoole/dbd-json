{"version":3,"sources":["webpack://dbd/webpack/universalModuleDefinition","webpack://dbd/./src/enum.ts","webpack://dbd/./src/factories.ts","webpack://dbd/./src/factory/base/factory.ts","webpack://dbd/./src/factory/base/model.ts","webpack://dbd/./src/factory/base/modelFactory.ts","webpack://dbd/./src/factory/itemFactory.ts","webpack://dbd/./src/factory/killerAddonFactory.ts","webpack://dbd/./src/factory/killerFactory.ts","webpack://dbd/./src/factory/killerOfferingFactory.ts","webpack://dbd/./src/factory/killerPerkFactory.ts","webpack://dbd/./src/factory/model/addon.ts","webpack://dbd/./src/factory/model/index.ts","webpack://dbd/./src/factory/model/item.ts","webpack://dbd/./src/factory/model/offering.ts","webpack://dbd/./src/factory/model/perk.ts","webpack://dbd/./src/factory/model/player.ts","webpack://dbd/./src/factory/model/power.ts","webpack://dbd/./src/factory/powerFactory.ts","webpack://dbd/./src/factory/sharedOfferingFactory.ts","webpack://dbd/./src/factory/survivorAddonFactory.ts","webpack://dbd/./src/factory/survivorFactory.ts","webpack://dbd/./src/factory/survivorOfferingFactory.ts","webpack://dbd/./src/factory/survivorPerkFactory.ts","webpack://dbd/./src/index.ts","webpack://dbd/./src/locale.ts","webpack://dbd/./src/locales/de.ts","webpack://dbd/./src/locales/en.ts","webpack://dbd/./src/locales/es.ts","webpack://dbd/./src/locales/fr.ts","webpack://dbd/./src/locales/index.ts","webpack://dbd/./src/locales/it.ts","webpack://dbd/./src/locales/jp.ts","webpack://dbd/./src/locales/ko.ts","webpack://dbd/./src/locales/pl.ts","webpack://dbd/./src/locales/ru.ts","webpack://dbd/./src/locales/th.ts","webpack://dbd/./src/locales/tr.ts","webpack://dbd/./src/locales/zh.ts","webpack://dbd/webpack/bootstrap","webpack://dbd/webpack/startup"],"names":["root","factory","exports","module","define","amd","global","Amounts","Player","Rarity","Difficulty","ItemType","ModifierType","Language","Killer","Survivor","locale","this","setLocale","language","undefined","item","data","items","killerAddon","killerAddons","killer","killers","killerOffering","killerOfferings","killerPerk","killerPerks","power","powers","sharedOffering","sharedOfferings","survivorAddon","survivorAddons","survivor","survivors","survivorOffering","survivorOfferings","survivorPerk","survivorPerks","Factories","get","key","find","value","index","exists","Factory","factories","initialized","frozen","id","name","description","image","initialize","freeze","length","Model","model","instances","getModel","instance","push","getModels","keys","map","getAllModels","ModelFactory","typeExists","type","ItemFactory","byOwner","byRarity","getModelsByOwner","addons","filter","addon","owner","getModelsByRarity","rarity","KillerAddonFactory","KillerFactory","KillerOfferingFactory","NoOne","KillerPerkFactory","modifier","Addon","flavor","Empty","_owner","isEmpty","setOwner","isKiller","Item","Offering","Perk","Power","_tierIndex","split","reduce","prev","current","arr","tiers","setTier","tier","max","difficulty","_perks","_power","setPerks","perks","setPower","player","PowerFactory","SharedOfferingFactory","byType","getModelsByType","SurvivorAddonFactory","SurvivorFactory","SurvivorOfferingFactory","SurvivorPerkFactory","setLanguage","offering","perk","Dbd","changeLanguage","Chinese","Locales","zh","English","en","French","fr","German","de","Italian","it","Japanese","jp","Korean","ko","Polish","pl","Russian","ru","Spanish","es","Taiwanese","th","Turkish","tr","Locale","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dbd\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dbd\"] = factory();\n\telse\n\t\troot[\"dbd\"] = factory();\n})(global, function() {\nreturn ","enum Amounts {\r\n    Slightly,\r\n    Moderately,\r\n    Considerably,\r\n    Tremendously,\r\n}\r\n\r\nenum Player {\r\n    Survivor,\r\n    Killer,\r\n    None,\r\n}\r\n\r\nenum Rarity {\r\n    Common,\r\n    Uncommon,\r\n    Rare,\r\n    VeryRare,\r\n    UltraRare,\r\n    Event,\r\n}\r\n\r\nenum Difficulty {\r\n    Easy,\r\n    Intermediate,\r\n    Hard,\r\n}\r\n\r\nenum ItemType {\r\n    Empty,\r\n    Flashlight,\r\n    Key,\r\n    Map,\r\n    AidKit,\r\n    Toolbox,\r\n    Firecracker,\r\n}\r\n\r\nenum ModifierType {\r\n    None,\r\n    Power,\r\n    Item,\r\n    Addon,\r\n    Offering,\r\n    Perk,\r\n    Player,\r\n    PlayerType,\r\n}\r\n\r\nenum Language {\r\n    English = \"en\",\r\n    Spanish = \"es\",\r\n    German = \"de\",\r\n    French = \"fr\",\r\n    Italian = \"it\",\r\n    Japanese = \"jp\",\r\n    Korean = \"ko\",\r\n    Polish = \"pl\",\r\n    Russian = \"ru\",\r\n    Taiwanese = \"th\",\r\n    Turkish = \"tr\",\r\n    Chinese = \"zh\",\r\n}\r\n\r\nenum Killer {\r\n    NoOne = \"NOONE\",\r\n    Trapper = \"TRAPPER\",\r\n    Wraith = \"WRAITH\",\r\n    Hillbilly = \"HILLBILLY\",\r\n    Nurse = \"NURSE\",\r\n    Huntress = \"HUNTRESS\",\r\n    Shape = \"SHAPE\",\r\n    Hag = \"HAG\",\r\n    Cannibal = \"CANNIBAL\",\r\n    Doctor = \"DOCTOR\",\r\n    Nightmare = \"NIGHTMARE\",\r\n    Pig = \"PIG\",\r\n    Clown = \"CLOWN\",\r\n    Spirit = \"SPIRIT\",\r\n    Legion = \"LEGION\",\r\n    Plague = \"PLAGUE\",\r\n    Ghost = \"GHOST\",\r\n    Demogorgon = \"DEMOGORGON\",\r\n    Oni = \"ONI\",\r\n    Deathslinger = \"DEATHSLINGER\",\r\n    Executioner = \"EXECUTIONER\",\r\n    Blight = \"BLIGHT\",\r\n    Twins = \"TWINS\",\r\n    Trickster = \"TRICKSTER\",\r\n    Nemesis = \"NEMESIS\",\r\n}\r\n\r\nenum Survivor {\r\n    NoOne = \"NOONE\",\r\n    Dwight = \"DWIGHT_FAIRFIELD\",\r\n    Meg = \"MEG_THOMAS\",\r\n    Claudette = \"CLAUDETTE_MOREL\",\r\n    Jake = \"JAKE_PARK\",\r\n    Nea = \"NEA_KARLSSON\",\r\n    Bill = \"WILLIAM_OVERBECK\",\r\n    David = \"DAVID_KING\",\r\n    Laurie = \"LAURIE_STRODE\",\r\n    Ace = \"ACE_VISCONTI\",\r\n    Feng = \"FENG_MIN\",\r\n    Quentin = \"QUENTIN_SMITH\",\r\n    Tapp = \"DAVID_TAPP\",\r\n    Kate = \"KATE_DENSON\",\r\n    Adam = \"ADAM_FRANCIS\",\r\n    Jeff = \"JEFF_JOHANSEN\",\r\n    Jane = \"JANE_ROMERO\",\r\n    Ash = \"ASHLEY_J_WILLIAMS\",\r\n    Nancy = \"NANCY_WHEELER\",\r\n    Steve = \"STEVE_HARRINGTON\",\r\n    Yui = \"YUI_KIMURA\",\r\n    Zarina = \"ZARINA_KASSIR\",\r\n    Cheryl = \"CHERYL_MASON\",\r\n    Felix = \"FELIX_RICHTER\",\r\n    Elodie = \"ELODIE_RAKOTO\",\r\n    YunJin = \"YUN_JIN_LEE\",\r\n    Jill = \"JILL_VALENTINE\",\r\n    Leon = \"LEON_SCOTT_KENNEDY\",\r\n}\r\n\r\nexport { Amounts, Player, Rarity, Difficulty, ItemType, ModifierType, Language, Killer, Survivor };\r\n","import ItemFactory from \"./factory/itemFactory\";\r\nimport KillerAddonFactory from \"./factory/killerAddonFactory\";\r\nimport KillerFactory from \"./factory/killerFactory\";\r\nimport KillerOfferingFactory from \"./factory/killerOfferingFactory\";\r\nimport KillerPerkFactory from \"./factory/killerPerkFactory\";\r\nimport PowerFactory from \"./factory/powerFactory\";\r\nimport SharedOfferingFactory from \"./factory/sharedOfferingFactory\";\r\nimport SurvivorAddonFactory from \"./factory/survivorAddonFactory\";\r\nimport SurvivorFactory from \"./factory/survivorFactory\";\r\nimport SurvivorOfferingFactory from \"./factory/survivorOfferingFactory\";\r\nimport SurvivorPerkFactory from \"./factory/survivorPerkFactory\";\r\nimport Locale from \"./locale\";\r\n\r\nclass Factories {\r\n    item!: ItemFactory;\r\n    killerAddon!: KillerAddonFactory;\r\n    killer!: KillerFactory;\r\n    killerOffering!: KillerOfferingFactory;\r\n    killerPerk!: KillerPerkFactory;\r\n    power!: PowerFactory;\r\n    sharedOffering!: SharedOfferingFactory;\r\n    survivorAddon!: SurvivorAddonFactory;\r\n    survivor!: SurvivorFactory;\r\n    survivorOffering!: SurvivorOfferingFactory;\r\n    survivorPerk!: SurvivorPerkFactory;\r\n    locale!: Locale;\r\n\r\n    constructor(locale: Locale) {\r\n        this.setLocale(locale);\r\n    }\r\n\r\n    setLocale(locale: Locale): void {\r\n        const language = this.locale ? this.locale.language : undefined;\r\n        if (locale.language !== language) {\r\n            this.item = new ItemFactory(locale.data.items, this);\r\n            this.killerAddon = new KillerAddonFactory(locale.data.killerAddons, this);\r\n            this.killer = new KillerFactory(locale.data.killers, this);\r\n            this.killerOffering = new KillerOfferingFactory(locale.data.killerOfferings, this);\r\n            this.killerPerk = new KillerPerkFactory(locale.data.killerPerks, this);\r\n            this.power = new PowerFactory(locale.data.powers, this);\r\n            this.sharedOffering = new SharedOfferingFactory(locale.data.sharedOfferings, this);\r\n            this.survivorAddon = new SurvivorAddonFactory(locale.data.survivorAddons, this);\r\n            this.survivor = new SurvivorFactory(locale.data.survivors, this);\r\n            this.survivorOffering = new SurvivorOfferingFactory(\r\n                locale.data.survivorOfferings,\r\n                this\r\n            );\r\n            this.survivorPerk = new SurvivorPerkFactory(locale.data.survivorPerks, this);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Factories;\r\n","import { BaseEntity } from \"../../types\";\r\n\r\nclass Factory<T extends BaseEntity> {\r\n    data: T[];\r\n\r\n    constructor(data: T[]) {\r\n        this.data = data;\r\n    }\r\n\r\n    get(key: string): T | undefined {\r\n        const item = this.data.find(value => value.index === key);\r\n        return item;\r\n    }\r\n\r\n    exists(key: string): boolean {\r\n        return !!this.get(key);\r\n    }\r\n}\r\n\r\nexport default Factory;\r\n","import Factories from \"../../factories\";\r\nimport { BaseEntity } from \"../../types\";\r\n\r\nclass Model<T extends BaseEntity> {\r\n    data: T;\r\n    factories: Factories;\r\n    initialized = false;\r\n    frozen = false;\r\n\r\n    constructor(factories: Factories, data?: T) {\r\n        if (data) {\r\n            this.data = data;\r\n        } else {\r\n            this.data = {\r\n                id: -1,\r\n                index: \"\",\r\n                name: \"\",\r\n                description: \"\",\r\n                image: \"\",\r\n            } as T;\r\n        }\r\n        this.factories = factories;\r\n    }\r\n\r\n    initialize(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    freeze(): void {\r\n        this.frozen = true;\r\n    }\r\n\r\n    get index(): string {\r\n        return this.data.index;\r\n    }\r\n\r\n    get isEmpty(): boolean {\r\n        return !(\"index\" in this.data && !!this.data.index && this.data.index.length > 0);\r\n    }\r\n}\r\n\r\nexport default Model;\r\n","import Factories from \"../../factories\";\r\nimport { BaseEntity } from \"../../types\";\r\nimport Factory from \"./factory\";\r\nimport Model from \"./model\";\r\n\r\ntype ModelParamSignature<C extends Model<T>, T extends BaseEntity> = new (\r\n    factories: Factories,\r\n    data?: T\r\n) => C;\r\n\r\nclass ModelFactory<C extends Model<T>, T extends BaseEntity> extends Factory<T> {\r\n    model: ModelParamSignature<C, T>;\r\n    factories: Factories;\r\n    instances: C[] = [];\r\n\r\n    constructor(factories: Factories, model: ModelParamSignature<C, T>, data: T[]) {\r\n        super(data);\r\n        this.model = model;\r\n        this.factories = factories;\r\n    }\r\n\r\n    getModel(key: string): C {\r\n        const data = super.get(key);\r\n\r\n        if (data) {\r\n            let instance = this.instances.find(item => item.index === key);\r\n\r\n            if (!instance) {\r\n                // eslint-disable-next-line new-cap\r\n                instance = new this.model(this.factories, data);\r\n                this.instances.push(instance);\r\n                instance.initialize();\r\n            }\r\n\r\n            return instance;\r\n        }\r\n\r\n        // eslint-disable-next-line new-cap\r\n        return new this.model(this.factories);\r\n    }\r\n\r\n    getModels(keys: string[]): C[] {\r\n        return keys.map(key => this.getModel(key));\r\n    }\r\n\r\n    getAllModels(): C[] {\r\n        return this.data.map(item => this.getModel(item.index));\r\n    }\r\n}\r\n\r\nexport default ModelFactory;\r\n","import { Item } from \"../types\";\r\nimport ItemModel from \"./model/item\";\r\nimport ModelFactory from \"./base/modelFactory\";\r\nimport Factories from \"../factories\";\r\nimport { ItemType } from \"../enum\";\r\n\r\nclass ItemFactory extends ModelFactory<ItemModel, Item> {\r\n    constructor(data: Item[], factories: Factories) {\r\n        super(factories, ItemModel, data);\r\n    }\r\n\r\n    typeExists(key: ItemType): boolean {\r\n        return !!this.data.find(item => item.type === key);\r\n    }\r\n}\r\n\r\nexport default ItemFactory;\r\n","import { Addon } from \"../types\";\r\nimport AddonModel from \"./model/addon\";\r\nimport ModelFactory from \"./base/modelFactory\";\r\nimport Factories from \"../factories\";\r\nimport { Rarity } from \"../enum\";\r\n\r\nclass KillerAddonFactory extends ModelFactory<AddonModel, Addon> {\r\n    byOwner: { [key: string]: AddonModel[] } = {};\r\n    byRarity: { [key: string]: AddonModel[] } = {};\r\n\r\n    constructor(data: Addon[], factories: Factories) {\r\n        super(factories, AddonModel, data);\r\n    }\r\n\r\n    getModelsByOwner(key: string): AddonModel[] {\r\n        const ownerExists = this.factories.killer.exists(key);\r\n        if (ownerExists) {\r\n            if (!(key in this.byOwner)) {\r\n                const addons = this.data\r\n                    .filter(addon => addon.owner === key)\r\n                    .map(addon => addon.index);\r\n                this.byOwner[key] = this.getModels(addons);\r\n            }\r\n            return this.byOwner[key];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    getModelsByRarity(key: Rarity): AddonModel[] {\r\n        if (!(key in this.byRarity)) {\r\n            const addons = this.data\r\n                .filter(addon => addon.rarity === key)\r\n                .map(addon => addon.index);\r\n            this.byRarity[key] = this.getModels(addons);\r\n        }\r\n        return this.byRarity[key];\r\n    }\r\n}\r\n\r\nexport default KillerAddonFactory;\r\n","import { Player } from \"../types\";\r\nimport PlayerModel from \"./model/player\";\r\nimport ModelFactory from \"./base/modelFactory\";\r\nimport Factories from \"../factories\";\r\n\r\nclass KillerFactory extends ModelFactory<PlayerModel, Player> {\r\n    constructor(data: Player[], factories: Factories) {\r\n        super(factories, PlayerModel, data);\r\n    }\r\n}\r\n\r\nexport default KillerFactory;\r\n","import { Offering } from \"../types\";\r\nimport OfferingModel from \"./model/offering\";\r\nimport ModelFactory from \"./base/modelFactory\";\r\nimport Factories from \"../factories\";\r\n\r\nclass KillerOfferingFactory extends ModelFactory<OfferingModel, Offering> {\r\n    constructor(data: Offering[], factories: Factories) {\r\n        super(factories, OfferingModel, data);\r\n    }\r\n}\r\n\r\nexport default KillerOfferingFactory;\r\n","import { Perk } from \"../types\";\r\nimport PerkModel from \"./model/perk\";\r\nimport ModelFactory from \"./base/modelFactory\";\r\nimport Factories from \"../factories\";\r\nimport { Killer } from \"../enum\";\r\n\r\nclass KillerPerkFactory extends ModelFactory<PerkModel, Perk> {\r\n    byOwner: { [key: string]: PerkModel[] } = {};\r\n\r\n    constructor(data: Perk[], factories: Factories) {\r\n        super(factories, PerkModel, data);\r\n    }\r\n\r\n    getModelsByOwner(key: string): PerkModel[] {\r\n        const ownerExists = key === Killer.NoOne || this.factories.killer.exists(key);\r\n        if (ownerExists) {\r\n            if (!(key in this.byOwner)) {\r\n                const addons = this.data\r\n                    .filter(addon => addon.owner === key)\r\n                    .map(addon => addon.index);\r\n                this.byOwner[key] = this.getModels(addons);\r\n            }\r\n            return this.byOwner[key];\r\n        }\r\n        return [];\r\n    }\r\n}\r\n\r\nexport default KillerPerkFactory;\r\n","import { Addon as AddonType } from \"../../types\";\r\nimport { ItemType, ModifierType, Player, Rarity } from \"../../enum\";\r\nimport Model from \"../base/model\";\r\nimport PlayerModel from \"./player\";\r\n\r\nclass Addon extends Model<AddonType> {\r\n    modifier: ModifierType = ModifierType.Addon;\r\n    protected _owner: PlayerModel | undefined;\r\n\r\n    get id(): number {\r\n        return this.data.id;\r\n    }\r\n\r\n    get index(): string {\r\n        return this.data.index;\r\n    }\r\n\r\n    get name(): string {\r\n        return this.data.name;\r\n    }\r\n\r\n    get description(): string {\r\n        return this.data.description;\r\n    }\r\n\r\n    get image(): string {\r\n        return this.data.image;\r\n    }\r\n\r\n    get rarity(): Rarity {\r\n        return this.data.rarity;\r\n    }\r\n\r\n    get flavor(): string | undefined {\r\n        return this.data?.flavor;\r\n    }\r\n\r\n    get type(): ItemType {\r\n        return typeof this.data.type !== \"undefined\" ? this.data.type : ItemType.Empty;\r\n    }\r\n\r\n    get owner(): PlayerModel | undefined {\r\n        if (this._owner) {\r\n            return this._owner;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    get player(): Player {\r\n        if (this._owner) {\r\n            const power = this._owner.data.power;\r\n            const hasPower = typeof power === \"string\" && power.length > 0;\r\n            if (hasPower) {\r\n                return Player.Killer;\r\n            }\r\n        }\r\n\r\n        return Player.Survivor;\r\n    }\r\n\r\n    initialize(): void {\r\n        if (!this.isEmpty) {\r\n            this.setOwner(this.data.owner);\r\n            super.initialize();\r\n        }\r\n    }\r\n\r\n    protected setOwner(owner: string | undefined): void {\r\n        if (owner) {\r\n            const { killer, survivor } = this.factories;\r\n            const isKiller = killer.exists(owner);\r\n\r\n            if (isKiller) {\r\n                this._owner = killer.getModel(owner);\r\n            } else {\r\n                this._owner = survivor.getModel(owner);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Addon;\r\n","import Item from \"./item\";\r\nimport Offering from \"./offering\";\r\nimport Perk from \"./perk\";\r\nimport Player from \"./player\";\r\nimport Power from \"./power\";\r\nimport Addon from \"./addon\";\r\n\r\nexport { Item, Offering, Perk, Player, Power, Addon };\r\n","import { Item as ItemTypeModel } from \"../../types\";\r\nimport Model from \"../base/model\";\r\nimport { ModifierType, Rarity, ItemType } from \"../../enum\";\r\n\r\nclass Item extends Model<ItemTypeModel> {\r\n    modifier: ModifierType = ModifierType.Item;\r\n\r\n    get id(): number {\r\n        return this.data.id;\r\n    }\r\n\r\n    get index(): string {\r\n        return this.data.index;\r\n    }\r\n\r\n    get name(): string {\r\n        return this.data.name;\r\n    }\r\n\r\n    get description(): string {\r\n        return this.data.description;\r\n    }\r\n\r\n    get image(): string {\r\n        return this.data.image;\r\n    }\r\n\r\n    get type(): ItemType {\r\n        return this.data.type;\r\n    }\r\n\r\n    get rarity(): Rarity {\r\n        return this.data.rarity;\r\n    }\r\n\r\n    get flavor(): string | undefined {\r\n        return this.data.flavor;\r\n    }\r\n}\r\n\r\nexport default Item;\r\n","import { Offering as OfferingType } from \"../../types\";\r\nimport Model from \"../base/model\";\r\nimport { ModifierType, Rarity } from \"../../enum\";\r\n\r\nclass Offering extends Model<OfferingType> {\r\n    modifier: ModifierType = ModifierType.Offering;\r\n\r\n    get id(): number {\r\n        return this.data.id;\r\n    }\r\n\r\n    get index(): string {\r\n        return this.data.index;\r\n    }\r\n\r\n    get name(): string {\r\n        return this.data.name;\r\n    }\r\n\r\n    get description(): string {\r\n        return this.data.description;\r\n    }\r\n\r\n    get image(): string {\r\n        return this.data.image;\r\n    }\r\n\r\n    get rarity(): Rarity {\r\n        return this.data.rarity;\r\n    }\r\n\r\n    get flavor(): string | undefined {\r\n        return this.data.flavor;\r\n    }\r\n}\r\n\r\nexport default Offering;\r\n","import { Perk as PerkType } from \"../../types\";\r\nimport Model from \"../base/model\";\r\nimport { ModifierType, Player, Rarity } from \"../../enum\";\r\nimport PlayerModel from \"./player\";\r\n\r\nclass Perk extends Model<PerkType> {\r\n    modifier: ModifierType = ModifierType.Perk;\r\n    protected _owner: PlayerModel | undefined;\r\n    protected _tierIndex = 2;\r\n\r\n    get id(): number {\r\n        return this.data.id;\r\n    }\r\n\r\n    get index(): string {\r\n        return this.data.index;\r\n    }\r\n\r\n    get name(): string {\r\n        return this.data.name;\r\n    }\r\n\r\n    get image(): string {\r\n        return this.data.image;\r\n    }\r\n\r\n    get flavor(): string | undefined {\r\n        return this.data.flavor;\r\n    }\r\n\r\n    get owner(): PlayerModel | undefined {\r\n        if (this._owner) {\r\n            return this._owner;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    get player(): Player {\r\n        const isKiller = this.factories.killer.exists(this.index);\r\n        if (isKiller) {\r\n            return Player.Killer;\r\n        }\r\n\r\n        return Player.Survivor;\r\n    }\r\n\r\n    get tier(): number {\r\n        return this._tierIndex + 1;\r\n    }\r\n\r\n    get rarity(): Rarity {\r\n        return this.data.rarity[this._tierIndex];\r\n    }\r\n\r\n    get description(): string {\r\n        return this.data.description\r\n            .split(/\\{[0-9]{1,2}\\}/g)\r\n            .reduce<string>((prev, current, index, arr) => {\r\n                const isLastIndex = index === arr.length - 1;\r\n                if (isLastIndex) {\r\n                    return `${prev}${current}`;\r\n                }\r\n                return `${prev}${current}${this.data.tiers[this._tierIndex][index]}`;\r\n            }, \"\");\r\n    }\r\n\r\n    initialize(): void {\r\n        if (!this.isEmpty) {\r\n            this.setOwner(this.data.owner);\r\n            super.initialize();\r\n        }\r\n    }\r\n\r\n    setTier(tier: number): void {\r\n        const index = tier - 1;\r\n        const max = this.data.rarity.length - 1;\r\n        if (index >= 0 && index <= max) {\r\n            this._tierIndex = tier - 1;\r\n        }\r\n    }\r\n\r\n    protected setOwner(owner: string): void {\r\n        if (owner) {\r\n            const { killer, survivor } = this.factories;\r\n            const isKiller = killer.exists(owner);\r\n\r\n            if (isKiller) {\r\n                this._owner = killer.getModel(owner);\r\n            } else {\r\n                this._owner = survivor.getModel(owner);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Perk;\r\n","import { Player as PlayerType } from \"../../types\";\r\nimport Model from \"../base/model\";\r\nimport { Difficulty, ModifierType, Player as PlayerEnum } from \"../../enum\";\r\nimport PerkModel from \"./perk\";\r\nimport PowerModel from \"./power\";\r\n\r\nclass Player extends Model<PlayerType> {\r\n    modifier: ModifierType = ModifierType.Player;\r\n    protected _perks: PerkModel[] | undefined;\r\n    protected _power: PowerModel | undefined;\r\n\r\n    get id(): number {\r\n        return this.data.id;\r\n    }\r\n\r\n    get index(): string {\r\n        return this.data.index;\r\n    }\r\n\r\n    get name(): string {\r\n        return this.data.name;\r\n    }\r\n\r\n    get description(): string {\r\n        return this.data.description;\r\n    }\r\n\r\n    get image(): string {\r\n        return this.data.image;\r\n    }\r\n\r\n    get difficulty(): Difficulty {\r\n        return this.data.difficulty;\r\n    }\r\n\r\n    get perks(): PerkModel[] {\r\n        if (this._perks) {\r\n            return this._perks;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    get power(): PowerModel | undefined {\r\n        if (this._power) {\r\n            return this._power;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    get player(): PlayerEnum {\r\n        const hasPower = typeof this.data.power === \"string\" && this.data.power.length > 0;\r\n        if (hasPower) {\r\n            return PlayerEnum.Killer;\r\n        }\r\n\r\n        return PlayerEnum.Survivor;\r\n    }\r\n\r\n    initialize(): void {\r\n        if (!this.isEmpty) {\r\n            this.setPerks(this.data.perks);\r\n            this.setPower(this.data.power);\r\n            super.initialize();\r\n        }\r\n    }\r\n\r\n    protected setPerks(perks: string[]): void {\r\n        const { killerPerk, survivorPerk } = this.factories;\r\n        this._perks = perks.map(value =>\r\n            this.player === PlayerEnum.Killer\r\n                ? killerPerk.getModel(value)\r\n                : survivorPerk.getModel(value)\r\n        );\r\n    }\r\n\r\n    protected setPower(power: string | undefined): void {\r\n        if (power) {\r\n            const { power: factory } = this.factories;\r\n            this._power = this.player === PlayerEnum.Killer ? factory.getModel(power) : undefined;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Player;\r\n","import { Power as PowerType } from \"../../types\";\r\nimport Model from \"../base/model\";\r\nimport { ModifierType, Player } from \"../../enum\";\r\nimport PlayerModel from \"./player\";\r\n\r\nclass Power extends Model<PowerType> {\r\n    modifier: ModifierType = ModifierType.Power;\r\n    protected _owner: PlayerModel | undefined;\r\n\r\n    get id(): number {\r\n        return this.data.id;\r\n    }\r\n\r\n    get index(): string {\r\n        return this.data.index;\r\n    }\r\n\r\n    get name(): string {\r\n        return this.data.name;\r\n    }\r\n\r\n    get description(): string {\r\n        return this.data.description;\r\n    }\r\n\r\n    get image(): string {\r\n        return this.data.image;\r\n    }\r\n\r\n    get flavor(): string | undefined {\r\n        return this.data.flavor;\r\n    }\r\n\r\n    get owner(): PlayerModel | undefined {\r\n        if (this._owner) {\r\n            return this._owner;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    get player(): Player {\r\n        return Player.Killer;\r\n    }\r\n\r\n    initialize(): void {\r\n        if (!this.isEmpty) {\r\n            this.setOwner(this.data.owner);\r\n            super.initialize();\r\n        }\r\n    }\r\n\r\n    protected setOwner(owner: string): void {\r\n        if (owner) {\r\n            this._owner = this.factories.killer.getModel(owner);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Power;\r\n","import { Power } from \"../types\";\r\nimport PowerModel from \"./model/power\";\r\nimport ModelFactory from \"./base/modelFactory\";\r\nimport Factories from \"../factories\";\r\n\r\nclass PowerFactory extends ModelFactory<PowerModel, Power> {\r\n    constructor(data: Power[], factories: Factories) {\r\n        super(factories, PowerModel, data);\r\n    }\r\n}\r\n\r\nexport default PowerFactory;\r\n","import { Offering } from \"../types\";\r\nimport OfferingModel from \"./model/offering\";\r\nimport ModelFactory from \"./base/modelFactory\";\r\nimport Factories from \"../factories\";\r\n\r\nclass SharedOfferingFactory extends ModelFactory<OfferingModel, Offering> {\r\n    constructor(data: Offering[], factories: Factories) {\r\n        super(factories, OfferingModel, data);\r\n    }\r\n}\r\n\r\nexport default SharedOfferingFactory;\r\n","import { Addon } from \"../types\";\r\nimport AddonModel from \"./model/addon\";\r\nimport ModelFactory from \"./base/modelFactory\";\r\nimport Factories from \"../factories\";\r\nimport { ItemType } from \"../enum\";\r\n\r\nclass SurvivorAddonFactory extends ModelFactory<AddonModel, Addon> {\r\n    byType: { [key: string]: AddonModel[] } = {};\r\n\r\n    constructor(data: Addon[], factories: Factories) {\r\n        super(factories, AddonModel, data);\r\n    }\r\n\r\n    getModelsByType(key: ItemType): AddonModel[] {\r\n        const itemExists = this.factories.item.typeExists(key);\r\n        if (itemExists) {\r\n            if (!(key in this.byType)) {\r\n                const addons = this.data\r\n                    .filter(addon => addon.type === key)\r\n                    .map(addon => addon.index);\r\n                this.byType[key] = this.getModels(addons);\r\n            }\r\n            return this.byType[key];\r\n        }\r\n        return [];\r\n    }\r\n}\r\n\r\nexport default SurvivorAddonFactory;\r\n","import { Player } from \"../types\";\r\nimport PlayerModel from \"./model/player\";\r\nimport ModelFactory from \"./base/modelFactory\";\r\nimport Factories from \"../factories\";\r\n\r\nclass SurvivorFactory extends ModelFactory<PlayerModel, Player> {\r\n    constructor(data: Player[], factories: Factories) {\r\n        super(factories, PlayerModel, data);\r\n    }\r\n}\r\n\r\nexport default SurvivorFactory;\r\n","import { Offering } from \"../types\";\r\nimport OfferingModel from \"./model/offering\";\r\nimport ModelFactory from \"./base/modelFactory\";\r\nimport Factories from \"../factories\";\r\n\r\nclass SurvivorOfferingFactory extends ModelFactory<OfferingModel, Offering> {\r\n    constructor(data: Offering[], factories: Factories) {\r\n        super(factories, OfferingModel, data);\r\n    }\r\n}\r\n\r\nexport default SurvivorOfferingFactory;\r\n","import { Perk } from \"../types\";\r\nimport PerkModel from \"./model/perk\";\r\nimport ModelFactory from \"./base/modelFactory\";\r\nimport Factories from \"../factories\";\r\nimport { Survivor } from \"../enum\";\r\n\r\nclass SurvivorPerkFactory extends ModelFactory<PerkModel, Perk> {\r\n    byOwner: { [key: string]: PerkModel[] } = {};\r\n\r\n    constructor(data: Perk[], factories: Factories) {\r\n        super(factories, PerkModel, data);\r\n    }\r\n\r\n    getModelsByOwner(key: string): PerkModel[] {\r\n        const ownerExists = key === Survivor.NoOne || this.factories.killer.exists(key);\r\n        if (ownerExists) {\r\n            if (!(key in this.byOwner)) {\r\n                const addons = this.data\r\n                    .filter(addon => addon.owner === key)\r\n                    .map(addon => addon.index);\r\n                this.byOwner[key] = this.getModels(addons);\r\n            }\r\n            return this.byOwner[key];\r\n        }\r\n        return [];\r\n    }\r\n}\r\n\r\nexport default SurvivorPerkFactory;\r\n","import {\r\n    Amounts,\r\n    Player as PlayerType,\r\n    Rarity,\r\n    Difficulty,\r\n    ItemType,\r\n    ModifierType,\r\n    Language,\r\n    Killer,\r\n    Survivor,\r\n} from \"./enum\";\r\nimport Factories from \"./factories\";\r\nimport {\r\n    Addon as AddonModel,\r\n    Item as ItemModel,\r\n    Offering as OfferingModel,\r\n    Perk as PerkModel,\r\n    Player as PlayerModel,\r\n    Power as PowerModel,\r\n} from \"./factory/model\";\r\nimport Locale from \"./locale\";\r\nimport { Item, Addon, Offering, Perk, Player, Power, LocaleData } from \"./types\";\r\n\r\nclass Dbd {\r\n    locale!: Locale;\r\n    factory!: Factories;\r\n\r\n    async setLanguage(language: Language): Promise<void> {\r\n        this.locale = new Locale(language);\r\n        this.factory = new Factories(this.locale);\r\n    }\r\n\r\n    item(key: string): ItemModel {\r\n        return this.factory.item.getModel(key);\r\n    }\r\n\r\n    items(): ItemModel[] {\r\n        return this.factory.item.getAllModels();\r\n    }\r\n\r\n    addon(key: string): AddonModel {\r\n        const addon: AddonModel = this.factory.survivorAddon.getModel(key);\r\n        if (!addon.isEmpty) {\r\n            return addon;\r\n        }\r\n        return this.factory.killerAddon.getModel(key);\r\n    }\r\n\r\n    survivorAddons(key?: ItemType): AddonModel[] {\r\n        if (typeof key === \"number\") {\r\n            return this.factory.survivorAddon.getModelsByType(key);\r\n        }\r\n        return this.factory.survivorAddon.getAllModels();\r\n    }\r\n\r\n    killerAddons(key?: Killer): AddonModel[] {\r\n        if (typeof key === \"number\") {\r\n            return this.factory.killerAddon.getModelsByOwner(key);\r\n        }\r\n        return this.factory.killerAddon.getAllModels();\r\n    }\r\n\r\n    offering(key: string): OfferingModel {\r\n        let offering: OfferingModel = this.factory.survivorOffering.getModel(key);\r\n        if (offering) {\r\n            return offering;\r\n        }\r\n        offering = this.factory.killerOffering.getModel(key);\r\n        if (offering) {\r\n            return offering;\r\n        }\r\n        return this.factory.sharedOffering.getModel(key);\r\n    }\r\n\r\n    survivorOfferings(): OfferingModel[] {\r\n        const sharedOfferings = this.factory.sharedOffering.getAllModels();\r\n        const survivorOfferings = this.factory.survivorOffering.getAllModels();\r\n        return { ...sharedOfferings, ...survivorOfferings };\r\n    }\r\n\r\n    killerOfferings(): OfferingModel[] {\r\n        const sharedOfferings = this.factory.sharedOffering.getAllModels();\r\n        const killerOfferings = this.factory.killerOffering.getAllModels();\r\n        return { ...sharedOfferings, ...killerOfferings };\r\n    }\r\n\r\n    power(key: string): PowerModel {\r\n        return this.factory.power.getModel(key);\r\n    }\r\n\r\n    powers(): PowerModel[] {\r\n        return this.factory.power.getAllModels();\r\n    }\r\n\r\n    perk(key: string): PerkModel {\r\n        const perk: PerkModel = this.factory.survivorPerk.getModel(key);\r\n        if (perk) {\r\n            return perk;\r\n        }\r\n        return this.factory.killerPerk.getModel(key);\r\n    }\r\n\r\n    killerPerks(key?: Killer): PerkModel[] {\r\n        if (typeof key === \"string\") {\r\n            return this.factory.killerPerk.getModelsByOwner(key);\r\n        }\r\n        return this.factory.killerPerk.getAllModels();\r\n    }\r\n\r\n    survivorPerks(key?: Survivor): PerkModel[] {\r\n        if (typeof key === \"string\") {\r\n            return this.factory.survivorPerk.getModelsByOwner(key);\r\n        }\r\n        return this.factory.survivorPerk.getAllModels();\r\n    }\r\n\r\n    survivor(key: string): PlayerModel {\r\n        return this.factory.survivor.getModel(key);\r\n    }\r\n\r\n    survivors(): PlayerModel[] {\r\n        return this.factory.survivor.getAllModels();\r\n    }\r\n\r\n    killer(key: string): PlayerModel {\r\n        return this.factory.killer.getModel(key);\r\n    }\r\n\r\n    killers(): PlayerModel[] {\r\n        return this.factory.killer.getAllModels();\r\n    }\r\n}\r\n\r\nexport {\r\n    Item,\r\n    Addon,\r\n    Offering,\r\n    Perk,\r\n    PlayerType,\r\n    Power,\r\n    Amounts,\r\n    Player,\r\n    Rarity,\r\n    Difficulty,\r\n    ItemType,\r\n    ModifierType,\r\n    Language,\r\n    LocaleData,\r\n    Killer,\r\n    Survivor,\r\n    AddonModel,\r\n    ItemModel,\r\n    OfferingModel,\r\n    PerkModel,\r\n    PlayerModel,\r\n    PowerModel,\r\n};\r\nexport default Dbd;\r\n","import { Language } from \"./enum\";\r\nimport { Addon, Item, LocaleData, Offering, Perk, Player, Power } from \"./types\";\r\nimport * as Locales from \"./locales\";\r\n\r\nclass Locale {\r\n    data!: LocaleData;\r\n\r\n    constructor(language: Language) {\r\n        this.changeLanguage(language);\r\n    }\r\n\r\n    changeLanguage(language: Language): void {\r\n        const currentLanguage = this.data ? this.data.language : undefined;\r\n        if (language === currentLanguage) {\r\n            return;\r\n        }\r\n\r\n        let data: LocaleData;\r\n        switch (language) {\r\n            case Language.Chinese:\r\n                data = Locales.zh;\r\n                break;\r\n            case Language.English:\r\n                data = Locales.en;\r\n                break;\r\n            case Language.French:\r\n                data = Locales.fr;\r\n                break;\r\n            case Language.German:\r\n                data = Locales.de;\r\n                break;\r\n            case Language.Italian:\r\n                data = Locales.it;\r\n                break;\r\n            case Language.Japanese:\r\n                data = Locales.jp;\r\n                break;\r\n            case Language.Korean:\r\n                data = Locales.ko;\r\n                break;\r\n            case Language.Polish:\r\n                data = Locales.pl;\r\n                break;\r\n            case Language.Russian:\r\n                data = Locales.ru;\r\n                break;\r\n            case Language.Spanish:\r\n                data = Locales.es;\r\n                break;\r\n            case Language.Taiwanese:\r\n                data = Locales.th;\r\n                break;\r\n            case Language.Turkish:\r\n                data = Locales.tr;\r\n                break;\r\n            default:\r\n                data = Locales.en;\r\n                break;\r\n        }\r\n\r\n        this.data = data;\r\n    }\r\n\r\n    get language(): Language {\r\n        return this.data.language;\r\n    }\r\n\r\n    get items(): Item[] {\r\n        return this.data.items;\r\n    }\r\n\r\n    get killerAddons(): Addon[] {\r\n        return this.data.killerAddons;\r\n    }\r\n\r\n    get killerOfferings(): Offering[] {\r\n        return this.data.killerOfferings;\r\n    }\r\n\r\n    get killerPerks(): Perk[] {\r\n        return this.data.killerPerks;\r\n    }\r\n\r\n    get killers(): Player[] {\r\n        return this.data.killers;\r\n    }\r\n\r\n    get powers(): Power[] {\r\n        return this.data.powers;\r\n    }\r\n\r\n    get sharedOfferings(): Offering[] {\r\n        return this.data.sharedOfferings;\r\n    }\r\n\r\n    get survivorAddons(): Addon[] {\r\n        return this.data.survivorAddons;\r\n    }\r\n\r\n    get survivorPerks(): Perk[] {\r\n        return this.data.survivorPerks;\r\n    }\r\n\r\n    get survivors(): Player[] {\r\n        return this.data.survivors;\r\n    }\r\n}\r\n\r\nexport default Locale;\r\n","import items = require(\"../data.compiled/de/items.json\");\r\nimport killerAddons = require(\"../data.compiled/de/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/de/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/de/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/de/killers.json\");\r\nimport powers = require(\"../data.compiled/de/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/de/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/de/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/de/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/de/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/de/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.German;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","import items = require(\"../data.compiled/en/items.json\");\r\nimport killerAddons = require(\"../data.compiled/en/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/en/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/en/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/en/killers.json\");\r\nimport powers = require(\"../data.compiled/en/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/en/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/en/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/en/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/en/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/en/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.English;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","import items = require(\"../data.compiled/es/items.json\");\r\nimport killerAddons = require(\"../data.compiled/es/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/es/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/es/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/es/killers.json\");\r\nimport powers = require(\"../data.compiled/es/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/es/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/es/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/es/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/es/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/es/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.Spanish;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","import items = require(\"../data.compiled/fr/items.json\");\r\nimport killerAddons = require(\"../data.compiled/fr/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/fr/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/fr/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/fr/killers.json\");\r\nimport powers = require(\"../data.compiled/fr/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/fr/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/fr/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/fr/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/fr/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/fr/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.French;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","import de from \"./de\";\r\nimport en from \"./en\";\r\nimport es from \"./es\";\r\nimport fr from \"./fr\";\r\nimport it from \"./it\";\r\nimport jp from \"./jp\";\r\nimport ko from \"./ko\";\r\nimport pl from \"./pl\";\r\nimport ru from \"./ru\";\r\nimport th from \"./th\";\r\nimport tr from \"./tr\";\r\nimport zh from \"./zh\";\r\n\r\nexport { de, en, es, fr, it, jp, ko, pl, ru, th, tr, zh };\r\n","import items = require(\"../data.compiled/it/items.json\");\r\nimport killerAddons = require(\"../data.compiled/it/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/it/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/it/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/it/killers.json\");\r\nimport powers = require(\"../data.compiled/it/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/it/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/it/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/it/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/it/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/it/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.Italian;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","import items = require(\"../data.compiled/jp/items.json\");\r\nimport killerAddons = require(\"../data.compiled/jp/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/jp/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/jp/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/jp/killers.json\");\r\nimport powers = require(\"../data.compiled/jp/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/jp/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/jp/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/jp/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/jp/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/jp/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.Japanese;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","import items = require(\"../data.compiled/ko/items.json\");\r\nimport killerAddons = require(\"../data.compiled/ko/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/ko/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/ko/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/ko/killers.json\");\r\nimport powers = require(\"../data.compiled/ko/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/ko/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/ko/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/ko/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/ko/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/ko/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.Korean;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","import items = require(\"../data.compiled/pl/items.json\");\r\nimport killerAddons = require(\"../data.compiled/pl/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/pl/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/pl/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/pl/killers.json\");\r\nimport powers = require(\"../data.compiled/pl/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/pl/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/pl/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/pl/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/pl/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/pl/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.Korean;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","import items = require(\"../data.compiled/ru/items.json\");\r\nimport killerAddons = require(\"../data.compiled/ru/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/ru/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/ru/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/ru/killers.json\");\r\nimport powers = require(\"../data.compiled/ru/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/ru/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/ru/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/ru/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/ru/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/ru/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.Russian;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","import items = require(\"../data.compiled/th/items.json\");\r\nimport killerAddons = require(\"../data.compiled/th/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/th/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/th/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/th/killers.json\");\r\nimport powers = require(\"../data.compiled/th/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/th/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/th/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/th/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/th/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/th/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.Taiwanese;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","import items = require(\"../data.compiled/tr/items.json\");\r\nimport killerAddons = require(\"../data.compiled/tr/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/tr/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/tr/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/tr/killers.json\");\r\nimport powers = require(\"../data.compiled/tr/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/tr/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/tr/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/tr/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/tr/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/tr/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.Turkish;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","import items = require(\"../data.compiled/zh/items.json\");\r\nimport killerAddons = require(\"../data.compiled/zh/killerAddons.json\");\r\nimport killerOfferings = require(\"../data.compiled/zh/killerOfferings.json\");\r\nimport killerPerks = require(\"../data.compiled/zh/killerPerks.json\");\r\nimport killers = require(\"../data.compiled/zh/killers.json\");\r\nimport powers = require(\"../data.compiled/zh/powers.json\");\r\nimport sharedOfferings = require(\"../data.compiled/zh/sharedOfferings.json\");\r\nimport survivorAddons = require(\"../data.compiled/zh/survivorAddons.json\");\r\nimport survivorOfferings = require(\"../data.compiled/zh/survivorOfferings.json\");\r\nimport survivorPerks = require(\"../data.compiled/zh/survivorPerks.json\");\r\nimport survivors = require(\"../data.compiled/zh/survivors.json\");\r\nimport { Language } from \"../enum\";\r\nimport { LocaleData } from \"../types\";\r\n\r\nconst language = Language.Chinese;\r\nconst data: LocaleData = {\r\n    items,\r\n    killerAddons,\r\n    killerOfferings,\r\n    killerPerks,\r\n    killers,\r\n    powers,\r\n    sharedOfferings,\r\n    survivorAddons,\r\n    survivorOfferings,\r\n    survivorPerks,\r\n    survivors,\r\n    language,\r\n};\r\n\r\nexport default data;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(9879);\n"],"sourceRoot":""}